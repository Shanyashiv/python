def bernoulli_equation(v1, p1, z1, v2, p2, z2, rho, g=9.81):

  pressure_diff = (0.5 * rho * v1**2 + rho * g * z1 + p1) - (0.5 * rho * v2**2 + rho * g * z2 + p2)
  return pressure_diff
v1 = 5  # m/s
p1 = 100000  # Pa (atmospheric pressure)
z1 = 2  # m
v2 = 10  # m/s
p2 = 0  # Pa (atmospheric pressure)
z2 = 1  # m
rho = 1000  # kg/m^3 (water)

pressure_diff = bernoulli_equation(v1, p1, z1, v2, p2, z2, rho)
print("Pressure difference:", pressure_diff, "Pa")
import numpy as np
import matplotlib.pyplot as plt

# Constants
density = 1.225 # Density of air in kg/m^3
velocity_range = np.linspace(5, 25, 100) # Range of velocities (m/s))
height_range = np.linspace(0, 10, 100) # Range of heights (m)

# Function to calculate pressure using Bernoulli's principle
def calculate_pressure(velocity, height):
    constant = 0.5 * density * velocity_range[0]**2 + density * 9.81 * height_range[0]  # Calculate constant for minimum velocity and height
    return constant - (0.5 * density * velocity**2 + density * 9.81 * height)  # Using Bernoulli's equation

# Calculate pressure differences for varying velocities and heights
pressure_differences = np.zeros((len(velocity_range), len(height_range)))
for i, velocity in enumerate(velocity_range):
    for j, height in enumerate(height_range):
        pressure_differences[i, j] = calculate_pressure(velocity, height)

# Plotting
plt.figure(figsize=(10,6))

#Create a contour plot for presssure differnces
X, Y = np.meshgrid(velocity_range, height_range)
contour = plt.contourf(X, Y, pressure_differences.T, levels=20, cmap='viridis')
cbar = plt.colorbar(contour)
cbar.set_label('Pressure Difference (Pa)')

# Add labels and title
plt.xlabel('Velocity (m/s)')
plt.ylabel('Height (m)')
plt.title('Pressure Difference vs. Velocity and Height')
plt.grid(True)

plt.show()
